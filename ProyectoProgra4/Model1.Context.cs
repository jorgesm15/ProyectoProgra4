//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoProgra4
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoEntities1 : DbContext
    {
        public ProyectoEntities1()
            : base("name=ProyectoEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Disciplinas> Disciplinas { get; set; }
        public virtual DbSet<Reserva> Reserva { get; set; }
    
        public virtual int InsertarClientes(string pIdCliente, string pNombre, string pPrimerApellido, string pSegundoApellido, string pCorreo, Nullable<int> pEdad, string pContraseña, string pDireccion, string pTelefono, string pTelefonoEmergencia, Nullable<decimal> pPeso, Nullable<decimal> pEstatura, string pCondicionesMedicas, string pTipoSangre)
        {
            var pIdClienteParameter = pIdCliente != null ?
                new ObjectParameter("pIdCliente", pIdCliente) :
                new ObjectParameter("pIdCliente", typeof(string));
    
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pPrimerApellidoParameter = pPrimerApellido != null ?
                new ObjectParameter("pPrimerApellido", pPrimerApellido) :
                new ObjectParameter("pPrimerApellido", typeof(string));
    
            var pSegundoApellidoParameter = pSegundoApellido != null ?
                new ObjectParameter("pSegundoApellido", pSegundoApellido) :
                new ObjectParameter("pSegundoApellido", typeof(string));
    
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pEdadParameter = pEdad.HasValue ?
                new ObjectParameter("pEdad", pEdad) :
                new ObjectParameter("pEdad", typeof(int));
    
            var pContraseñaParameter = pContraseña != null ?
                new ObjectParameter("pContraseña", pContraseña) :
                new ObjectParameter("pContraseña", typeof(string));
    
            var pDireccionParameter = pDireccion != null ?
                new ObjectParameter("pDireccion", pDireccion) :
                new ObjectParameter("pDireccion", typeof(string));
    
            var pTelefonoParameter = pTelefono != null ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(string));
    
            var pTelefonoEmergenciaParameter = pTelefonoEmergencia != null ?
                new ObjectParameter("pTelefonoEmergencia", pTelefonoEmergencia) :
                new ObjectParameter("pTelefonoEmergencia", typeof(string));
    
            var pPesoParameter = pPeso.HasValue ?
                new ObjectParameter("pPeso", pPeso) :
                new ObjectParameter("pPeso", typeof(decimal));
    
            var pEstaturaParameter = pEstatura.HasValue ?
                new ObjectParameter("pEstatura", pEstatura) :
                new ObjectParameter("pEstatura", typeof(decimal));
    
            var pCondicionesMedicasParameter = pCondicionesMedicas != null ?
                new ObjectParameter("pCondicionesMedicas", pCondicionesMedicas) :
                new ObjectParameter("pCondicionesMedicas", typeof(string));
    
            var pTipoSangreParameter = pTipoSangre != null ?
                new ObjectParameter("pTipoSangre", pTipoSangre) :
                new ObjectParameter("pTipoSangre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarClientes", pIdClienteParameter, pNombreParameter, pPrimerApellidoParameter, pSegundoApellidoParameter, pCorreoParameter, pEdadParameter, pContraseñaParameter, pDireccionParameter, pTelefonoParameter, pTelefonoEmergenciaParameter, pPesoParameter, pEstaturaParameter, pCondicionesMedicasParameter, pTipoSangreParameter);
        }
    
        public virtual int RegistrarReserva(Nullable<int> claseID, Nullable<System.DateTime> dia, Nullable<System.TimeSpan> hora, Nullable<bool> equipo, string idCliente)
        {
            var claseIDParameter = claseID.HasValue ?
                new ObjectParameter("claseID", claseID) :
                new ObjectParameter("claseID", typeof(int));
    
            var diaParameter = dia.HasValue ?
                new ObjectParameter("dia", dia) :
                new ObjectParameter("dia", typeof(System.DateTime));
    
            var horaParameter = hora.HasValue ?
                new ObjectParameter("hora", hora) :
                new ObjectParameter("hora", typeof(System.TimeSpan));
    
            var equipoParameter = equipo.HasValue ?
                new ObjectParameter("equipo", equipo) :
                new ObjectParameter("equipo", typeof(bool));
    
            var idClienteParameter = idCliente != null ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarReserva", claseIDParameter, diaParameter, horaParameter, equipoParameter, idClienteParameter);
        }
    }
}
